error when building the image

- We discovered that disk space issues and a Java version mismatch were preventing the successful build of your Docker image.

*freeing up disk space, 
*removed Java 21 and installed Java 11, which your application requires.

Still unable to build the image

*We ensured that the "Compile," "Test," and "Package" stages were all using the same Docker image (maven:3.8.5-openjdk-17). This consistency ensures that the build process occurs in the same environment, making the target directory accessible across these stages.

*Stash and Unstash:
The stash command was used to save the JAR file generated during the "Build&Package" stage. 
By stashing the JAR file, we ensured that it could be retrieved later in the "Build and Push Docker Image" stage using unstash.

The use of stash and unstash provided a reliable method to pass artifacts between stages, and by maintaining a consistent environment across the relevant stages, we avoided the problem of missing files.






STEPS TO DEPLOY ARGOCD USING K8S 
- Launch ec2 instances t3small
- use a script to install docker
- use a script to install K3S
- Launch an K3S Cluster "light kubernetes"
- use a script to install kubectl
- create a argocd namespace
- deploy argocd in the k3S cluster
- check for svc and pods within argocd namespace to make sure that resources have been deployed
- change cluster ip type to nodeport in other to access the argocd through the browser
- edit inbound rule to make sure that the nodeport service port is allow 
- for instance
Type: Custom TCP Rule
Protocol: TCP
Port Range: 31426
Source: 0.0.0.0/0 (or your specific IP range)
https://<your-public-ip>:31426

Login into the argocd server
- run the command k get secrets -n argocd
will list all the secret: nb the argocd-initial-admin-secret is the the one that contains the login infos
- run the command kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 --decode          to obtain the password
login into argocd UI username is admin by default
argocd psswd OHwEpGKeTzArj0Rg